"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[1582],{45416:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"manual/develop/nodes/mithril-client-library","title":"Mithril client library","description":"Mithril client library can be used by Rust developers to use the Mithril network in their applications.","source":"@site/versioned_docs/version-maintained/manual/develop/nodes/mithril-client-library.md","sourceDirName":"manual/develop/nodes","slug":"/manual/develop/nodes/mithril-client-library","permalink":"/doc/manual/develop/nodes/mithril-client-library","draft":false,"unlisted":false,"editUrl":"https://github.com/input-output-hk/mithril/edit/main/docs/website/root/manual/develop/nodes/mithril-client-library.md","tags":[],"version":"maintained","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"manualSideBar","previous":{"title":"Mithril client node","permalink":"/doc/manual/develop/nodes/mithril-client"},"next":{"title":"Mithril client library WASM","permalink":"/doc/manual/develop/nodes/mithril-client-library-wasm"}}');var r=i(74848),s=i(28453);const a={sidebar_position:4},l="Mithril client library",c={},o=[{value:"Resources",id:"resources",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Using the Mithril client library",id:"using-the-mithril-client-library",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"mithril-client-library",children:"Mithril client library"})}),"\n",(0,r.jsxs)(t.admonition,{type:"info",children:[(0,r.jsx)(t.p,{children:"Mithril client library can be used by Rust developers to use the Mithril network in their applications."}),(0,r.jsx)(t.p,{children:"It is responsible for handling the different types of data certified by Mithril and available through a Mithril aggregator:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/glossary#snapshot",children:(0,r.jsx)(t.strong,{children:"Snapshot"})}),": list, get, download the tarball, and record statistics"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/glossary#stake-distribution",children:(0,r.jsx)(t.strong,{children:"Mithril stake distribution"})}),": list and get"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/glossary#cardano-transaction",children:(0,r.jsx)(t.strong,{children:"Cardano transaction"})}),": list and get snapshots, get proofs"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/glossary#stake-distribution",children:(0,r.jsx)(t.strong,{children:"Cardano stake distribution"})}),": list, get, and get by epoch"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/glossary#certificate",children:(0,r.jsx)(t.strong,{children:"Certificate"})}),": list, get, and chain validation."]}),"\n"]})]}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["For more information about the ",(0,r.jsx)(t.strong,{children:"Mithril network"}),", please see the ",(0,r.jsx)(t.a,{href:"/doc/mithril/advanced/mithril-network/architecture",children:"architecture"})," overview"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["For more information about the ",(0,r.jsx)(t.strong,{children:"Mithril client"})," node, please see ",(0,r.jsx)(t.a,{href:"/doc/mithril/advanced/mithril-network/client",children:"this overview"})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Check out the ",(0,r.jsx)(t.a,{href:"/doc/manual/getting-started/bootstrap-cardano-node",children:(0,r.jsx)(t.code,{children:"Bootstrap a Cardano node"})})," guide."]}),"\n"]}),"\n"]})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["The Mithril network configurations are available in the ",(0,r.jsx)(t.a,{href:"/doc/manual/getting-started/network-configurations",children:(0,r.jsx)(t.strong,{children:"Network configurations"})})," section of the user manual."]})}),"\n",(0,r.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Node"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Source repository"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Rust documentation"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Network configurations"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.strong,{children:"Mithril client"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://github.com/input-output-hk/mithril/tree/main/mithril-client",children:"\u2197\ufe0f"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://mithril.network/rust-doc/mithril_client/index.html",children:"\u2197\ufe0f"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"/doc/manual/getting-started/network-configurations",children:"\u2197\ufe0f"})})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Install the latest stable version of the ",(0,r.jsx)(t.a,{href:"https://www.rust-lang.org/learn/get-started",children:"correctly configured"})," Rust toolchain"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Install build tools ",(0,r.jsx)(t.code,{children:"build-essential"})," and ",(0,r.jsx)(t.code,{children:"m4"}),"; for example, on Ubuntu/Debian/Mint, run ",(0,r.jsx)(t.code,{children:"sudo apt install build-essential m4"})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Install OpenSSL development libraries; for example, on Ubuntu/Debian/Mint, run ",(0,r.jsx)(t.code,{children:"apt install libssl-dev"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(t.p,{children:["In your project, use ",(0,r.jsx)(t.code,{children:"cargo"})," to add ",(0,r.jsx)(t.a,{href:"https://crates.io/crates/mithril-client",children:"mithril-client"})," crate as a dependency:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cargo add mithril-client\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["Mithril client is an asynchronous library. You will need a runtime to execute your futures. We recommend using the crate ",(0,r.jsx)(t.a,{href:"https://crates.io/crates/tokio",children:"tokio"}),", as the library has been tested with it."]})}),"\n",(0,r.jsx)(t.h2,{id:"using-the-mithril-client-library",children:"Using the Mithril client library"}),"\n",(0,r.jsx)(t.p,{children:"Below is a basic example of how to use most of the functions exposed by the Mithril client library:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",metastring:'title="/src/main.rs"',children:'use mithril_client::{ClientBuilder, MessageBuilder};\nuse std::path::Path;\n\n#[tokio::main]\nasync fn main() -> mithril_client::MithrilResult<()> {\n    let client = ClientBuilder::aggregator("YOUR_AGGREGATOR_ENDPOINT", "YOUR_GENESIS_VERIFICATION_KEY").build()?;\n\n    let snapshots = client.snapshot().list().await?;\n\n    let last_digest = snapshots.first().unwrap().digest.as_ref();\n    let snapshot = client.snapshot().get(last_digest).await?.unwrap();\n\n    let certificate = client\n        .certificate()\n        .verify_chain(&snapshot.certificate_hash)\n        .await?;\n\n    // Note: the directory must already exist, and the user running this code must have read/write access to it.\n    let target_directory = Path::new("YOUR_TARGET_DIRECTORY");\n    client\n        .snapshot()\n        .download_unpack(&snapshot, target_directory)\n        .await?;\n\n    if let Err(e) = client.snapshot().add_statistics(&snapshot).await {\n        println!("Could not increment snapshot download statistics: {:?}", e);\n    }\n\n    let message = MessageBuilder::new()\n        .compute_snapshot_message(&certificate, target_directory)\n        .await?;\n    assert!(certificate.match_message(&message));\n\n    Ok(())\n}\n'})}),"\n",(0,r.jsxs)(t.admonition,{type:"info",children:[(0,r.jsxs)(t.p,{children:["Snapshot download and certificate chain validation can take quite some time, even with a fast computer and network. We have implemented a feedback mechanism for them; more details are available in the ",(0,r.jsx)(t.a,{href:"https://mithril.network/rust-doc/mithril_client/feedback/index.html",children:"feedback sub-module"}),"."]}),(0,r.jsxs)(t.p,{children:["An example of implementation with the crate ",(0,r.jsx)(t.a,{href:"https://crates.io/crates/indicatif",children:"indicatif"})," is available in the ",(0,r.jsx)(t.a,{href:"https://github.com/input-output-hk/mithril/tree/main/examples/client-snapshot/src/main.rs",children:"Mithril repository"}),". To run it, execute the following command:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cargo run -p client-snapshot\n"})}),(0,r.jsx)(t.p,{children:"or directly from the example crate directory:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cargo run\n"})})]}),"\n",(0,r.jsxs)(t.p,{children:["Here is a working example of the code using the configuration parameters of the ",(0,r.jsx)(t.code,{children:"release-preprod"})," network:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",metastring:'title="/src/main.rs"',children:'use mithril_client::{ClientBuilder, MessageBuilder};\nuse std::path::Path;\n\n#[tokio::main]\nasync fn main() -> mithril_client::MithrilResult<()> {\n    let client = ClientBuilder::aggregator("https://aggregator.release-preprod.api.mithril.network/aggregator", "5b3132372c37332c3132342c3136312c362c3133372c3133312c3231332c3230372c3131372c3139382c38352c3137362c3139392c3136322c3234312c36382c3132332c3131392c3134352c31332c3233322c3234332c34392c3232392c322c3234392c3230352c3230352c33392c3233352c34345d").build()?;\n\n    let snapshots = client.snapshot().list().await?;\n\n    let last_digest = snapshots.first().unwrap().digest.as_ref();\n    let snapshot = client.snapshot().get(last_digest).await?.unwrap();\n\n    let certificate = client\n        .certificate()\n        .verify_chain(&snapshot.certificate_hash)\n        .await?;\n\n    // Note: the directory must already exist, and the user running this code must have read/write access to it.\n    let target_directory = Path::new(".");\n    client\n        .snapshot()\n        .download_unpack(&snapshot, target_directory)\n        .await?;\n\n    if let Err(e) = client.snapshot().add_statistics(&snapshot).await {\n        println!("Could not increment snapshot download statistics: {:?}", e);\n    }\n\n    let message = MessageBuilder::new()\n        .compute_snapshot_message(&certificate, target_directory)\n        .await?;\n    assert!(certificate.match_message(&message));\n\n    Ok(())\n}\n'})}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.p,{children:["You can read the complete ",(0,r.jsx)(t.a,{href:"https://mithril.network/rust-doc/mithril_client/index.html",children:"developer documentation"}),"."]})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>l});var n=i(96540);const r={},s=n.createContext(r);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);